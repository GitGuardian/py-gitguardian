# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Main

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv
          pipenv install --dev --system --skip-lock
      - name: Lint with flake8
        run: |
          pipenv run flake8
      - name: Lint with black
        run: |
          pipenv run black .

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv
          pipenv install --system --dev --skip-lock
      - name: Test with pytest
        run: |
          pipenv run coverage run --source pygitguardian -m pytest --disable-pytest-warnings
          pipenv run coverage report --fail-under=80
          pipenv run coverage xml
      - uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  release:
    runs-on: ubuntu-latest
    needs: [lint, build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Build distribution
        run: >-
          python setup.py sdist bdist_wheel
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
      - name: Release Notary Action
        uses: docker://aevea/release-notary:0.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
